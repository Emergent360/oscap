---
###############################################################################
#
# Ansible Playbook generated from evaluation of Protection Profile for General Purpose Operating Systems
#
# Profile ID: xccdf_org.ssgproject.content_profile_ospp
# XCCDF Version:  1.2
#
# Evaluation Start Time:  2020-09-02T01:42:45
# Evaluation End Time:  2020-09-02T01:42:46
#
# This file was generated by OpenSCAP 1.3.2 using:
# $ oscap xccdf generate fix --result-id xccdf_org.open-scap_testresult_xccdf_org.ssgproject.content_profile_ospp --fix-type ansible xccdf-results.xml
#
# This Ansible Playbook is generated from the results of a profile evaluation.
# It attempts to remediate all issues from the selected rules that failed the test.
#
# How to apply this Ansible Playbook:
# $ ansible-playbook -i "localhost," -c local playbook.yml
# $ ansible-playbook -i "192.168.1.155," playbook.yml
# $ ansible-playbook -i inventory.ini playbook.yml
#
###############################################################################


- hosts: all
  vars:
    var_system_crypto_policy: !!str FIPS:OSPP
    var_accounts_max_concurrent_login_sessions: !!str 10
    var_accounts_user_umask: !!str 027
    var_password_pam_maxclassrepeat: !!str 4
    var_password_pam_maxrepeat: !!str 3
    var_password_pam_ucredit: !!str -1
    var_password_pam_minlen: !!str 12
    var_password_pam_ocredit: !!str -1
    var_password_pam_dcredit: !!str -1
    var_password_pam_lcredit: !!str -1
    var_password_pam_difok: !!str 4
    var_accounts_passwords_pam_faillock_deny: !!str 3
    var_password_pam_unix_remember: !!str 5
    var_accounts_passwords_pam_faillock_unlock_time: !!str 0
    var_accounts_passwords_pam_faillock_fail_interval: !!str 900
    var_accounts_password_minlen_login_defs: !!str 12
    sysctl_net_ipv4_conf_default_accept_source_route_value: !!str 0
    sysctl_net_ipv4_tcp_syncookies_value: !!str 1
    sysctl_net_ipv4_conf_all_accept_redirects_value: !!str 0
    sysctl_net_ipv4_conf_default_secure_redirects_value: !!str 0
    sysctl_net_ipv4_conf_default_log_martians_value: !!str 1
    sysctl_net_ipv4_conf_all_log_martians_value: !!str 1
    sysctl_net_ipv4_conf_default_rp_filter_value: !!str 1
    sysctl_net_ipv4_conf_all_secure_redirects_value: !!str 0
    sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value: !!str 1
    sysctl_net_ipv4_conf_default_accept_redirects_value: !!str 0
    sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value: !!str 1
    sysctl_net_ipv6_conf_default_accept_ra_value: !!str 0
    sysctl_net_ipv6_conf_default_accept_source_route_value: !!str 0
    sysctl_net_ipv6_conf_all_accept_ra_value: !!str 0
    sysctl_net_ipv6_conf_all_accept_source_route_value: !!str 0
    sysctl_net_ipv6_conf_default_accept_redirects_value: !!str 0
    sysctl_net_ipv6_conf_all_accept_redirects_value: !!str 0
    var_sshd_set_keepalive: !!str 0
    sshd_idle_timeout_value: !!str 840
  tasks:
    - name: get current kernel parameters
      command: /usr/bin/grub2-editenv - list
      register: kernelopts
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_audit_backlog_limit_argument
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required
        - CCE-80943-4
    - name: Update the bootloader menu
      command: /usr/bin/grub2-editenv - set "{{ item }} audit_backlog_limit=8192"
      with_items: '{{ kernelopts.stdout_lines | select(''match'', ''^kernelopts.*'') |
        list }}'
      when:
        - kernelopts.stdout_lines is defined
        - kernelopts.stdout_lines | length > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_audit_backlog_limit_argument
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required
        - CCE-80943-4

    - name: get current kernel parameters
      command: /usr/bin/grub2-editenv - list
      register: kernelopts
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_audit_argument
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required
        - CCE-80825-3
        - NIST-800-53-AC-17(1)
        - NIST-800-53-AU-14(1)
        - NIST-800-53-AU-10
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IR-5(1)
        - NIST-800-171-3.3.1
        - PCI-DSS-Req-10.3
        - CJIS-5.4.1.1
    - name: Update the bootloader menu
      command: /usr/bin/grub2-editenv - set "{{ item }} audit=1"
      with_items: '{{ kernelopts.stdout_lines | select(''match'', ''^kernelopts.*'') |
        list }}'
      when:
        - kernelopts.stdout_lines is defined
        - kernelopts.stdout_lines | length > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_audit_argument
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required
        - CCE-80825-3
        - NIST-800-53-AC-17(1)
        - NIST-800-53-AU-14(1)
        - NIST-800-53-AU-10
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IR-5(1)
        - NIST-800-171-3.3.1
        - PCI-DSS-Req-10.3
        - CJIS-5.4.1.1

    - name: Set hostname as computer node name in audit logs
      block:
        - name: Deduplicate values from /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: false
            regexp: (?i)^\s*name_format\s*=\s*
            state: absent
        - name: Insert correct line to /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: true
            line: name_format = hostname
            state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - auditd_name_format
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82897-0

    - name: Put contents into /etc/audit/rules.d/30-ospp-v42-2-modify-success.rules according
        to policy
      copy:
        dest: /etc/audit/rules.d/30-ospp-v42-2-modify-success.rules
        content: |+
          ## Successful file modifications (open for write or truncate)
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F success=1 -F auid>=1000 -F auid!=unset -F key=successful-modification
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F success=1 -F auid>=1000 -F auid!=unset -F key=successful-modification
          -a always,exit -F arch=b32 -S open -F a1&01003 -F success=1 -F auid>=1000 -F auid!=unset -F key=successful-modification
          -a always,exit -F arch=b64 -S open -F a1&01003 -F success=1 -F auid>=1000 -F auid!=unset -F key=successful-modification
          -a always,exit -F arch=b32 -S truncate,ftruncate -F success=1 -F auid>=1000 -F auid!=unset -F key=successful-modification
          -a always,exit -F arch=b64 -S truncate,ftruncate -F success=1 -F auid>=1000 -F auid!=unset -F key=successful-modification
        force: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_modify_success
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82832-7
        - NIST-800-53-AU-2(a)

    - name: Put contents into /etc/audit/rules.d/30-ospp-v42-3-access-failed.rules according
        to policy
      copy:
        dest: /etc/audit/rules.d/30-ospp-v42-3-access-failed.rules
        content: |+
          ## Unsuccessful file access (any other opens) This has to go last.
          -a always,exit -F arch=b32 -S open,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccessful-access
          -a always,exit -F arch=b64 -S open,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccessful-access
          -a always,exit -F arch=b32 -S open,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccessful-access
          -a always,exit -F arch=b64 -S open,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccessful-access
        force: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_access_failed
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82833-5
        - NIST-800-53-AU-2(a)

    - name: Put contents into /etc/audit/rules.d/30-ospp-v42-1-create-failed.rules according
        to policy
      copy:
        dest: /etc/audit/rules.d/30-ospp-v42-1-create-failed.rules
        content: |+
          ## Unsuccessful file creation (open with O_CREAT)
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccessful-create
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccessful-create
          -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccessful-create
          -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccessful-create
          -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccessful-create
          -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccessful-create
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccessful-create
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccessful-create
          -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccessful-create
          -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccessful-create
          -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccessful-create
          -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccessful-create
        force: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_create_failed
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82374-0
        - NIST-800-53-AU-2(a)

    - name: Put contents into /etc/audit/rules.d/30-ospp-v42-4-delete-success.rules according
        to policy
      copy:
        dest: /etc/audit/rules.d/30-ospp-v42-4-delete-success.rules
        content: |+
          ## Successful file delete
          -a always,exit -F arch=b32 -S unlink,unlinkat,rename,renameat -F success=1 -F auid>=1000 -F auid!=unset -F key=successful-delete
          -a always,exit -F arch=b64 -S unlink,unlinkat,rename,renameat -F success=1 -F auid>=1000 -F auid!=unset -F key=successful-delete
        force: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_delete_success
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82836-8
        - NIST-800-53-AU-2(a)

    - name: Put contents into /etc/audit/rules.d/30-ospp-v42-1-create-success.rules according
        to policy
      copy:
        dest: /etc/audit/rules.d/30-ospp-v42-1-create-success.rules
        content: |+
          ## Successful file creation (open with O_CREAT)
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F success=1 -F auid>=1000 -F auid!=unset -F key=successful-create
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F success=1 -F auid>=1000 -F auid!=unset -F key=successful-create
          -a always,exit -F arch=b32 -S open -F a1&0100 -F success=1 -F auid>=1000 -F auid!=unset -F key=successful-create
          -a always,exit -F arch=b64 -S open -F a1&0100 -F success=1 -F auid>=1000 -F auid!=unset -F key=successful-create
          -a always,exit -F arch=b32 -S creat -F success=1 -F auid>=1000 -F auid!=unset -F key=successful-create
          -a always,exit -F arch=b64 -S creat -F success=1 -F auid>=1000 -F auid!=unset -F key=successful-create
        force: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_create_success
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82829-3
        - NIST-800-53-AU-2(a)

    - name: Put contents into /etc/audit/rules.d/11-loginuid.rules according to policy
      copy:
        dest: /etc/audit/rules.d/11-loginuid.rules
        content: |+
          ## Make the loginuid immutable. This prevents tampering with the auid.
          --loginuid-immutable
        force: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_immutable_login_uids
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82828-5
        - NIST-800-53-AU-2(a)

    - name: Put contents into /etc/audit/rules.d/30-ospp-v42-2-modify-failed.rules according
        to policy
      copy:
        dest: /etc/audit/rules.d/30-ospp-v42-2-modify-failed.rules
        content: |+
          ## Unsuccessful file modifications (open for write or truncate)
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccessful-modification
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccessful-modification
          -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccessful-modification
          -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccessful-modification
          -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccessful-modification
          -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccessful-modification
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccessful-modification
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccessful-modification
          -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccessful-modification
          -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccessful-modification
          -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccessful-modification
          -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccessful-modification
        force: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_modify_failed
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82830-1
        - NIST-800-53-AU-2(a)

    - name: Put contents into /etc/audit/rules.d/30-ospp-v42.rules according to policy
      copy:
        dest: /etc/audit/rules.d/30-ospp-v42.rules
        content: |+
          ## The purpose of these rules is to meet the requirements for Operating
          ## System Protection Profile (OSPP)v4.2. These rules depends on having
          ## the following rule files copied to /etc/audit/rules.d:
          ##
          ## 10-base-config.rules, 11-loginuid.rules,
          ## 30-ospp-v42-1-create-failed.rules, 30-ospp-v42-1-create-success.rules,
          ## 30-ospp-v42-2-modify-failed.rules, 30-ospp-v42-2-modify-success.rules,
          ## 30-ospp-v42-3-access-failed.rules, 30-ospp-v42-3-access-success.rules,
          ## 30-ospp-v42-4-delete-failed.rules, 30-ospp-v42-4-delete-success.rules,
          ## 30-ospp-v42-5-perm-change-failed.rules,
          ## 30-ospp-v42-5-perm-change-success.rules,
          ## 30-ospp-v42-6-owner-change-failed.rules,
          ## 30-ospp-v42-6-owner-change-success.rules
          ##
          ## original copies may be found in /usr/share/audit/sample-rules/
          ## User add delete modify. This is covered by pam. However, someone could
          ## open a file and directly create or modify a user, so we'll watch passwd and
          ## shadow for writes
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=user-modify
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=user-modify
          -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=user-modify
          -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000 -F auid!=unset -F key=user-modify
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=user-modify
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=user-modify
          -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=user-modify
          -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000 -F auid!=unset -F key=user-modify
          ## User enable and disable. This is entirely handled by pam.
          ## Group add delete modify. This is covered by pam. However, someone could
          ## open a file and directly create or modify a user, so we'll watch group and
          ## gshadow for writes
          -a always,exit -F path=/etc/passwd -F perm=wa -F auid>=1000 -F auid!=unset -F key=user-modify
          -a always,exit -F path=/etc/shadow -F perm=wa -F auid>=1000 -F auid!=unset -F key=user-modify
          -a always,exit -F path=/etc/group -F perm=wa -F auid>=1000 -F auid!=unset -F key=group-modify
          -a always,exit -F path=/etc/gshadow -F perm=wa -F auid>=1000 -F auid!=unset -F key=group-modify
          ## Use of special rights for config changes. This would be use of setuid
          ## programs that relate to user accts. This is not all setuid apps because
          ## requirements are only for ones that affect system configuration.
          -a always,exit -F path=/usr/sbin/unix_chkpwd -F perm=x -F auid>=1000 -F auid!=unset -F key=special-config-changes
          -a always,exit -F path=/usr/sbin/usernetctl -F perm=x -F auid>=1000 -F auid!=unset -F key=special-config-changes
          -a always,exit -F path=/usr/sbin/userhelper -F perm=x -F auid>=1000 -F auid!=unset -F key=special-config-changes
          -a always,exit -F path=/usr/sbin/seunshare -F perm=x -F auid>=1000 -F auid!=unset -F key=special-config-changes
          -a always,exit -F path=/usr/bin/mount -F perm=x -F auid>=1000 -F auid!=unset -F key=special-config-changes
          -a always,exit -F path=/usr/bin/newgrp -F perm=x -F auid>=1000 -F auid!=unset -F key=special-config-changes
          -a always,exit -F path=/usr/bin/newuidmap -F perm=x -F auid>=1000 -F auid!=unset -F key=special-config-changes
          -a always,exit -F path=/usr/bin/gpasswd -F perm=x -F auid>=1000 -F auid!=unset -F key=special-config-changes
          -a always,exit -F path=/usr/bin/newgidmap -F perm=x -F auid>=1000 -F auid!=unset -F key=special-config-changes
          -a always,exit -F path=/usr/bin/umount -F perm=x -F auid>=1000 -F auid!=unset -F key=special-config-changes
          -a always,exit -F path=/usr/bin/passwd -F perm=x -F auid>=1000 -F auid!=unset -F key=special-config-changes
          -a always,exit -F path=/usr/bin/crontab -F perm=x -F auid>=1000 -F auid!=unset -F key=special-config-changes
          -a always,exit -F path=/usr/bin/at -F perm=x -F auid>=1000 -F auid!=unset -F key=special-config-changes
          ## Privilege escalation via su or sudo. This is entirely handled by pam.
          ## Audit log access
          -a always,exit -F dir=/var/log/audit/ -F perm=r -F auid>=1000 -F auid!=unset -F key=access-audit-trail
          ## Attempts to Alter Process and Session Initiation Information
          -a always,exit -F path=/var/run/utmp -F perm=wa -F auid>=1000 -F auid!=unset -F key=session
          -a always,exit -F path=/var/log/btmp -F perm=wa -F auid>=1000 -F auid!=unset -F key=session
          -a always,exit -F path=/var/log/wtmp -F perm=wa -F auid>=1000 -F auid!=unset -F key=session
          ## Attempts to modify MAC controls
          -a always,exit -F dir=/etc/selinux/ -F perm=wa -F auid>=1000 -F auid!=unset -F key=MAC-policy
          ## Software updates. This is entirely handled by rpm.
          ## System start and shutdown. This is entirely handled by systemd
          ## Kernel Module loading. This is handled in 43-module-load.rules
          ## Application invocation. The requirements list an optional requirement
          ## FPT_SRP_EXT.1 Software Restriction Policies. This event is intended to
          ## state results from that policy. This would be handled entirely by
          ## that daemon.
        force: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_ospp_general
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82373-2
        - NIST-800-53-AU-2(a)

    - name: Put contents into /etc/audit/rules.d/30-ospp-v42-5-perm-change-failed.rules
        according to policy
      copy:
        dest: /etc/audit/rules.d/30-ospp-v42-5-perm-change-failed.rules
        content: |+
          ## Unsuccessful permission change
          -a always,exit -F arch=b32 -S chmod,fchmod,fchmodat,setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccessful-perm-change
          -a always,exit -F arch=b64 -S chmod,fchmod,fchmodat,setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccessful-perm-change
          -a always,exit -F arch=b32 -S chmod,fchmod,fchmodat,setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccessful-perm-change
          -a always,exit -F arch=b64 -S chmod,fchmod,fchmodat,setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccessful-perm-change
        force: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_perm_change_failed
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82837-6
        - NIST-800-53-AU-2(a)

    - name: Put contents into /etc/audit/rules.d/30-ospp-v42-6-owner-change-failed.rules
        according to policy
      copy:
        dest: /etc/audit/rules.d/30-ospp-v42-6-owner-change-failed.rules
        content: |+
          ## Unsuccessful ownership change
          -a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccessful-owner-change
          -a always,exit -F arch=b64 -S lchown,fchown,chown,fchownat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccessful-owner-change
          -a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccessful-owner-change
          -a always,exit -F arch=b64 -S lchown,fchown,chown,fchownat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccessful-owner-change
        force: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_owner_change_failed
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82384-9
        - NIST-800-53-AU-2(a)

    - name: Put contents into /etc/audit/rules.d/30-ospp-v42-4-delete-failed.rules according
        to policy
      copy:
        dest: /etc/audit/rules.d/30-ospp-v42-4-delete-failed.rules
        content: |+
          ## Unsuccessful file delete
          -a always,exit -F arch=b32 -S unlink,unlinkat,rename,renameat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccessful-delete
          -a always,exit -F arch=b64 -S unlink,unlinkat,rename,renameat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccessful-delete
          -a always,exit -F arch=b32 -S unlink,unlinkat,rename,renameat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccessful-delete
          -a always,exit -F arch=b64 -S unlink,unlinkat,rename,renameat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccessful-delete
        force: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_delete_failed
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82835-0
        - NIST-800-53-AU-2(a)

    - name: Put contents into /etc/audit/rules.d/43-module-load.rules according to policy
      copy:
        dest: /etc/audit/rules.d/43-module-load.rules
        content: |+
          ## These rules watch for kernel module insertion. By monitoring
          ## the syscall, we do not need any watches on programs.
          -a always,exit -F arch=b32 -S init_module,finit_module -F key=module-load
          -a always,exit -F arch=b64 -S init_module,finit_module -F key=module-load
          -a always,exit -F arch=b32 -S delete_module -F key=module-unload
          -a always,exit -F arch=b64 -S delete_module -F key=module-unload
        force: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_module_load
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82838-4
        - NIST-800-53-AU-2(a)

    - name: Put contents into /etc/audit/rules.d/30-ospp-v42-3-access-success.rules according
        to policy
      copy:
        dest: /etc/audit/rules.d/30-ospp-v42-3-access-success.rules
        content: |+
          ## Successful file access (any other opens) This has to go last.
          ## These next two are likely to result in a whole lot of events
          -a always,exit -F arch=b32 -S open,openat,open_by_handle_at -F success=1 -F auid>=1000 -F auid!=unset -F key=successful-access
          -a always,exit -F arch=b64 -S open,openat,open_by_handle_at -F success=1 -F auid>=1000 -F auid!=unset -F key=successful-access
        force: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_access_success
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82834-3
        - NIST-800-53-AU-2(a)

    - name: Put contents into /etc/audit/rules.d/30-ospp-v42-5-perm-change-success.rules
        according to policy
      copy:
        dest: /etc/audit/rules.d/30-ospp-v42-5-perm-change-success.rules
        content: |+
          ## Successful permission change
          -a always,exit -F arch=b32 -S chmod,fchmod,fchmodat,setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F success=1 -F auid>=1000 -F auid!=unset -F key=successful-perm-change
          -a always,exit -F arch=b64 -S chmod,fchmod,fchmodat,setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F success=1 -F auid>=1000 -F auid!=unset -F key=successful-perm-change
        force: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_perm_change_success
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82383-1
        - NIST-800-53-AU-2(a)

    - name: Put contents into /etc/audit/rules.d/10-base-config.rules according to policy
      copy:
        dest: /etc/audit/rules.d/10-base-config.rules
        content: |+
          ## First rule - delete all
          -D
          ## Increase the buffers to survive stress events.
          ## Make this bigger for busy systems
          -b 8192
          ## This determine how long to wait in burst of events
          --backlog_wait_time 60000
          ## Set failure mode to syslog
          -f 1
        force: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_basic_configuration
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82827-7
        - NIST-800-53-AU-2(a)

    - name: Put contents into /etc/audit/rules.d/30-ospp-v42-6-owner-change-success.rules
        according to policy
      copy:
        dest: /etc/audit/rules.d/30-ospp-v42-6-owner-change-success.rules
        content: |+
          ## Successful ownership change
          -a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F success=1 -F auid>=1000 -F auid!=unset -F key=successful-owner-change
          -a always,exit -F arch=b64 -S lchown,fchown,chown,fchownat -F success=1 -F auid>=1000 -F auid!=unset -F key=successful-owner-change
        force: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_owner_change_success
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82385-6
        - NIST-800-53-AU-2(a)

    - name: get current kernel parameters
      command: /usr/bin/grub2-editenv - list
      register: kernelopts
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_pti_argument
        - high_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required
        - CCE-82194-2
    - name: Update the bootloader menu
      command: /usr/bin/grub2-editenv - set "{{ item }} pti=on"
      with_items: '{{ kernelopts.stdout_lines | select(''match'', ''^kernelopts.*'') |
        list }}'
      when:
        - kernelopts.stdout_lines is defined
        - kernelopts.stdout_lines | length > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_pti_argument
        - high_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required
        - CCE-82194-2

    - name: Ensure dnf-automatic is installed
      package:
        name: dnf-automatic
        state: present
      tags:
        - package_dnf-automatic_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82985-3

    - name: Configure dnf-automatic to Install Available Updates Automatically
      ini_file:
        dest: /etc/dnf/automatic.conf
        section: commands
        option: apply_updates
        value: 'yes'
        create: true
      tags:
        - dnf-automatic_apply_updates
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-82494-6
        - NIST-800-53-SI-2(5)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SI-2(c)

    - name: Check existence of yum on Fedora
      stat:
        path: /etc/yum.conf
      register: yum_config_file
      check_mode: false
      when: ansible_distribution == "Fedora"
      tags:
        - ensure_gpgcheck_local_packages
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80791-7
        - NIST-800-53-CM-11(a)
        - NIST-800-53-CM-11(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-5(3)
        - NIST-800-53-SA-12
        - NIST-800-53-SA-12(10)
        - NIST-800-171-3.4.8
    - name: Ensure GPG check Enabled for Local Packages (Yum)
      ini_file:
        dest: /etc/yum.conf
        section: main
        option: localpkg_gpgcheck
        value: 1
        create: true
      when: (ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or yum_config_file.stat.exists)
      tags:
        - ensure_gpgcheck_local_packages
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80791-7
        - NIST-800-53-CM-11(a)
        - NIST-800-53-CM-11(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-5(3)
        - NIST-800-53-SA-12
        - NIST-800-53-SA-12(10)
        - NIST-800-171-3.4.8
    - name: Ensure GPG check Enabled for Local Packages (DNF)
      ini_file:
        dest: /etc/dnf/dnf.conf
        section: main
        option: localpkg_gpgcheck
        value: 1
        create: true
      when: ansible_distribution == "Fedora"
      tags:
        - ensure_gpgcheck_local_packages
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80791-7
        - NIST-800-53-CM-11(a)
        - NIST-800-53-CM-11(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-5(3)
        - NIST-800-53-SA-12
        - NIST-800-53-SA-12(10)
        - NIST-800-171-3.4.8

    - name: Enable timer dnf-automatic
      block:
        - name: Gather the package facts
          package_facts:
            manager: auto
        - name: Enable timer dnf-automatic
          systemd:
            name: dnf-automatic.timer
            enabled: 'yes'
            state: started
          when:
            - '"dnf-automatic" in ansible_facts.packages'
      tags:
        - timer_dnf-automatic_enabled
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82360-9
        - NIST-800-53-SI-2(5)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SI-2(c)

    - name: Configure dnf-automatic to Install Only Security Updates
      ini_file:
        dest: /etc/dnf/automatic.conf
        section: commands
        option: upgrade_type
        value: security
        create: true
      tags:
        - dnf-automatic_security_updates_only
        - low_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-82267-6
        - NIST-800-53-SI-2(5)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SI-2(c)

    - name: enable fips mode
      command: /usr/bin/fips-mode-setup --enable
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - enable_fips_mode
        - high_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - reboot_required
        - CCE-80942-6
        - NIST-800-53-SC-12(2)
        - NIST-800-53-SC-12(3)
        - NIST-800-53-IA-7
        - NIST-800-53-SC-13
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-12

    - name: Put a file with shell wrapper to configure OpenSSL to always use strong entropy
      copy:
        dest: /etc/profile.d/openssl-rand.sh
        content: |-
          # provide a default -rand /dev/random option to openssl commands that
          # support it
          # written inefficiently for maximum shell compatibility
          openssl()
          (
            openssl_bin=/usr/bin/openssl
            case "$*" in
              # if user specified -rand, honor it
              *\ -rand\ *|*\ -help*) exec $openssl_bin "$@" ;;
            esac
            cmds=`$openssl_bin list -digest-commands -cipher-commands | tr '\n' ' '`
            for i in `$openssl_bin list -commands`; do
              if $openssl_bin list -options "$i" | grep -q '^rand '; then
                cmds=" $i $cmds"
              fi
            done
            case "$cmds" in
              *\ "$1"\ *)
                cmd="$1"; shift
                exec $openssl_bin "$cmd" -rand /dev/random "$@" ;;
            esac
            exec $openssl_bin "$@"
          )
      tags:
        - openssl_use_strong_entropy
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82721-2


    - name: Configure System Cryptography Policy
      lineinfile:
        path: /etc/crypto-policies/config
        regexp: ^(?!#)(\S+)$
        line: '{{ var_system_crypto_policy }}'
        create: true
      tags:
        - configure_crypto_policy
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80935-0
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(2)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-MA-4(6)
        - NIST-800-53-SC-13
        - NIST-800-53-SC-12(2)
        - NIST-800-53-SC-12(3)
    - name: Verify that Crypto Policy is Set (runtime)
      command: /usr/bin/update-crypto-policies --set {{ var_system_crypto_policy }}
      tags:
        - configure_crypto_policy
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80935-0
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(2)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-MA-4(6)
        - NIST-800-53-SC-13
        - NIST-800-53-SC-12(2)
        - NIST-800-53-SC-12(3)

    - name: Ensure aide is installed
      package:
        name: aide
        state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - package_aide_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80844-4
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-11.5
        - CJIS-5.10.1.3

    - name: Ensure tuned is removed
      package:
        name: tuned
        state: absent
      tags:
        - package_tuned_removed
        - low_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82904-4

    - name: Ensure pigz is removed
      package:
        name: pigz
        state: absent
      tags:
        - package_pigz_removed
        - low_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82397-1


    - name: Limit the Number of Concurrent Login Sessions Allowed Per User
      lineinfile:
        state: present
        dest: /etc/security/limits.conf
        insertbefore: ^# End of file
        regexp: ^#?\*.*maxlogins
        line: '*           hard    maxlogins     {{ var_accounts_max_concurrent_login_sessions
          }}'
        create: true
      tags:
        - accounts_max_concurrent_login_sessions
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80955-8
        - NIST-800-53-AC-10
        - NIST-800-53-CM-6(a)
        - CJIS-5.5.2.2


    - name: Set user umask in /etc/profile
      replace:
        path: /etc/profile
        regexp: umask.*
        replace: umask {{ var_accounts_user_umask }}
      tags:
        - accounts_umask_etc_profile
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-81035-8
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)


    - name: Set user umask in /etc/bashrc
      replace:
        path: /etc/bashrc
        regexp: umask.*
        replace: umask {{ var_accounts_user_umask }}
      tags:
        - accounts_umask_etc_bashrc
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-81036-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)


    - name: Set user umask in /etc/csh.cshrc
      replace:
        path: /etc/csh.cshrc
        regexp: umask.*
        replace: umask {{ var_accounts_user_umask }}
      tags:
        - accounts_umask_etc_csh_cshrc
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-81037-4
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)

    - name: Disable Ctrl-Alt-Del Burst Action
      lineinfile:
        dest: /etc/systemd/system.conf
        state: present
        regexp: ^CtrlAltDelBurstAction
        line: CtrlAltDelBurstAction=none
        create: true
      tags:
        - disable_ctrlaltdel_burstaction
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80784-2
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.4.5

    - name: Disable Ctrl-Alt-Del Reboot Activation
      systemd:
        name: ctrl-alt-del.target
        masked: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - disable_ctrlaltdel_reboot
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80785-9
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - NIST-800-171-3.4.5

    - name: Ensure tmux is installed
      package:
        name: tmux
        state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - package_tmux_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80644-8
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.10

    - name: Configure the tmux Lock Command
      block:
        - name: Deduplicate values from /etc/tmux.conf
          lineinfile:
            path: /etc/tmux.conf
            create: false
            regexp: ^\s*set -g lock-command\s+
            state: absent
        - name: Insert correct line to /etc/tmux.conf
          lineinfile:
            path: /etc/tmux.conf
            create: true
            line: set -g lock-command vlock
            state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - configure_tmux_lock_command
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80940-0
        - NIST-800-53-AC-11(a)
        - NIST-800-53-AC-11(b)
        - NIST-800-53-CM-6(a)

    - name: Configure tmux to lock session after inactivity
      block:
        - name: Deduplicate values from /etc/tmux.conf
          lineinfile:
            path: /etc/tmux.conf
            create: false
            regexp: ^\s*set -g lock-after-time\s+
            state: absent
        - name: Insert correct line to /etc/tmux.conf
          lineinfile:
            path: /etc/tmux.conf
            create: true
            line: set -g lock-after-time 900
            state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - configure_tmux_lock_after_time
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82199-1


    - name: Ensure PAM variable maxclassrepeat is set accordingly
      lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*maxclassrepeat
        line: maxclassrepeat = {{ var_password_pam_maxclassrepeat }}
      tags:
        - accounts_password_pam_maxclassrepeat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-81034-1
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(4)


    - name: Ensure PAM variable maxrepeat is set accordingly
      lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*maxrepeat
        line: maxrepeat = {{ var_password_pam_maxrepeat }}
      tags:
        - accounts_password_pam_maxrepeat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82066-2
        - NIST-800-53-IA-5(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(4)


    - name: Ensure PAM variable ucredit is set accordingly
      lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*ucredit
        line: ucredit = {{ var_password_pam_ucredit }}
      tags:
        - accounts_password_pam_ucredit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80665-3
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(4)
        - PCI-DSS-Req-8.2.3


    - name: Ensure PAM variable minlen is set accordingly
      lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*minlen
        line: minlen = {{ var_password_pam_minlen }}
      tags:
        - accounts_password_pam_minlen
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80656-2
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(4)
        - PCI-DSS-Req-8.2.3
        - CJIS-5.6.2.1.1


    - name: Ensure PAM variable ocredit is set accordingly
      lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*ocredit
        line: ocredit = {{ var_password_pam_ocredit }}
      tags:
        - accounts_password_pam_ocredit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80663-8
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(4)


    - name: Ensure PAM variable dcredit is set accordingly
      lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*dcredit
        line: dcredit = {{ var_password_pam_dcredit }}
      tags:
        - accounts_password_pam_dcredit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80653-9
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(4)
        - PCI-DSS-Req-8.2.3


    - name: Ensure PAM variable lcredit is set accordingly
      lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*lcredit
        line: lcredit = {{ var_password_pam_lcredit }}
      tags:
        - accounts_password_pam_lcredit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80655-4
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(4)
        - PCI-DSS-Req-8.2.3


    - name: Ensure PAM variable difok is set accordingly
      lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*difok
        line: difok = {{ var_password_pam_difok }}
      tags:
        - accounts_password_pam_difok
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80654-7
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(4)
        - CJIS-5.6.2.1.1


    - name: Add auth pam_faillock preauth deny before pam_unix.so
      pamd:
        name: '{{ item }}'
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: required
        new_module_path: pam_faillock.so
        module_arguments: preauth silent deny={{ var_accounts_passwords_pam_faillock_deny
          }}
        state: before
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_deny
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80667-9
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-7(a)
        - NIST-800-171-3.1.8
        - PCI-DSS-Req-8.1.6
        - CJIS-5.5.3
    - name: Add deny argument to auth pam_faillock preauth
      pamd:
        name: '{{ item }}'
        type: auth
        control: required
        module_path: pam_faillock.so
        module_arguments: preauth silent deny={{ var_accounts_passwords_pam_faillock_deny
          }}
        state: args_present
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_deny
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80667-9
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-7(a)
        - NIST-800-171-3.1.8
        - PCI-DSS-Req-8.1.6
        - CJIS-5.5.3
    - name: Add auth pam_faillock authfail deny after pam_unix.so
      pamd:
        name: '{{ item }}'
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: '[default=die]'
        new_module_path: pam_faillock.so
        module_arguments: authfail deny={{ var_accounts_passwords_pam_faillock_deny }}
        state: after
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_deny
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80667-9
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-7(a)
        - NIST-800-171-3.1.8
        - PCI-DSS-Req-8.1.6
        - CJIS-5.5.3
    - name: Add deny argument to auth pam_faillock authfail
      pamd:
        name: '{{ item }}'
        type: auth
        new_type: auth
        control: '[default=die]'
        module_path: pam_faillock.so
        module_arguments: authfail deny={{ var_accounts_passwords_pam_faillock_deny }}
        state: args_present
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_deny
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80667-9
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-7(a)
        - NIST-800-171-3.1.8
        - PCI-DSS-Req-8.1.6
        - CJIS-5.5.3
    - name: Add account pam_faillock before pam_unix.so
      pamd:
        name: '{{ item }}'
        type: account
        control: required
        module_path: pam_unix.so
        new_type: account
        new_control: required
        new_module_path: pam_faillock.so
        state: before
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_deny
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80667-9
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-7(a)
        - NIST-800-171-3.1.8
        - PCI-DSS-Req-8.1.6
        - CJIS-5.5.3


    - name: Do not allow users to reuse recent passwords - system-auth (change)
      replace:
        dest: /etc/pam.d/system-auth
        follow: true
        regexp: ^(password\s+sufficient\s+pam_unix\.so\s.*remember\s*=\s*)(\S+)(.*)$
        replace: \g<1>{{ var_password_pam_unix_remember }}\g<3>
      tags:
        - accounts_password_pam_unix_remember
        - medium_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80666-1
        - NIST-800-53-IA-5(f)
        - NIST-800-53-IA-5(1)(e)
        - NIST-800-171-3.5.8
        - PCI-DSS-Req-8.2.5
        - CJIS-5.6.2.1.1
    - name: Do not allow users to reuse recent passwords - system-auth (add)
      replace:
        dest: /etc/pam.d/system-auth
        follow: true
        regexp: ^password\s+sufficient\s+pam_unix\.so\s(?!.*remember\s*=\s*).*$
        replace: \g<0> remember={{ var_password_pam_unix_remember }}
      tags:
        - accounts_password_pam_unix_remember
        - medium_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80666-1
        - NIST-800-53-IA-5(f)
        - NIST-800-53-IA-5(1)(e)
        - NIST-800-171-3.5.8
        - PCI-DSS-Req-8.2.5
        - CJIS-5.6.2.1.1


    - name: Add auth pam_faillock preauth unlock_time before pam_unix.so
      pamd:
        name: '{{ item }}'
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: required
        new_module_path: pam_faillock.so
        module_arguments: preauth silent unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time
          }}
        state: before
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_unlock_time
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80670-3
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-7(b)
        - NIST-800-171-3.1.8
        - PCI-DSS-Req-8.1.7
        - CJIS-5.5.3
    - name: Add unlock_time argument to pam_faillock preauth
      pamd:
        name: '{{ item }}'
        type: auth
        control: required
        module_path: pam_faillock.so
        module_arguments: preauth silent unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time
          }}
        state: args_present
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_unlock_time
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80670-3
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-7(b)
        - NIST-800-171-3.1.8
        - PCI-DSS-Req-8.1.7
        - CJIS-5.5.3
    - name: Add auth pam_faillock authfail unlock_interval after pam_unix.so
      pamd:
        name: '{{ item }}'
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: '[default=die]'
        new_module_path: pam_faillock.so
        module_arguments: authfail unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time
          }}
        state: after
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_unlock_time
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80670-3
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-7(b)
        - NIST-800-171-3.1.8
        - PCI-DSS-Req-8.1.7
        - CJIS-5.5.3
    - name: Add unlock_time argument to auth pam_faillock authfail
      pamd:
        name: '{{ item }}'
        type: auth
        control: '[default=die]'
        module_path: pam_faillock.so
        module_arguments: authfail unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time
          }}
        state: args_present
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_unlock_time
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80670-3
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-7(b)
        - NIST-800-171-3.1.8
        - PCI-DSS-Req-8.1.7
        - CJIS-5.5.3
    - name: Add account pam_faillock before pam_unix.so
      pamd:
        name: '{{ item }}'
        type: account
        control: required
        module_path: pam_unix.so
        new_type: account
        new_control: required
        new_module_path: pam_faillock.so
        state: before
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_unlock_time
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80670-3
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-7(b)
        - NIST-800-171-3.1.8
        - PCI-DSS-Req-8.1.7
        - CJIS-5.5.3


    - name: Add auth pam_faillock preauth fail_interval before pam_unix.so
      pamd:
        name: '{{ item }}'
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: required
        new_module_path: pam_faillock.so
        module_arguments: preauth silent fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval
          }}
        state: before
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_interval
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80669-5
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-7(a)
    - name: Add fail_interval argument to auth pam_faillock preauth
      pamd:
        name: '{{ item }}'
        type: auth
        control: required
        module_path: pam_faillock.so
        module_arguments: preauth silent fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval
          }}
        state: args_present
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_interval
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80669-5
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-7(a)
    - name: Add auth pam_faillock aufthfail fail_interval after pam_unix.so
      pamd:
        name: '{{ item }}'
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: '[default=die]'
        new_module_path: pam_faillock.so
        module_arguments: authfail fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval
          }}
        state: after
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_interval
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80669-5
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-7(a)
    - name: Add fail_interval argument to auth pam_faillock authfail
      pamd:
        name: '{{ item }}'
        type: auth
        control: '[default=die]'
        module_path: pam_faillock.so
        module_arguments: authfail fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval
          }}
        state: args_present
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_interval
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80669-5
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-7(a)
    - name: Add account pam_faillock before pam_unix.so
      pamd:
        name: '{{ item }}'
        type: account
        control: required
        module_path: pam_unix.so
        new_type: account
        new_control: required
        new_module_path: pam_faillock.so
        state: before
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_interval
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80669-5
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-7(a)


    - name: Set Password Minimum Length in login.defs
      lineinfile:
        dest: /etc/login.defs
        regexp: ^PASS_MIN_LEN *[0-9]*
        state: present
        line: PASS_MIN_LEN        {{ var_accounts_password_minlen_login_defs }}
        create: true
      tags:
        - accounts_password_minlen_login_defs
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80652-1
        - NIST-800-53-IA-5(f)
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.5.7
        - CJIS-5.6.2.1

    - name: Prevent Log In to Accounts With Empty Password - system-auth
      replace:
        dest: /etc/pam.d/system-auth
        follow: true
        regexp: nullok
      tags:
        - no_empty_passwords
        - high_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80841-0
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - PCI-DSS-Req-8.2.3
        - CJIS-5.5.2
    - name: Prevent Log In to Accounts With Empty Password - password-auth
      replace:
        dest: /etc/pam.d/password-auth
        follow: true
        regexp: nullok
      tags:
        - no_empty_passwords
        - high_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80841-0
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - PCI-DSS-Req-8.2.3
        - CJIS-5.5.2

    - name: Ensure policycoreutils-python-utils is installed
      package:
        name: policycoreutils-python-utils
        state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - package_policycoreutils-python-utils_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82724-6


    - name: Ensure sysctl net.ipv4.conf.default.accept_source_route is set
      sysctl:
        name: net.ipv4.conf.default.accept_source_route
        value: '{{ sysctl_net_ipv4_conf_default_accept_source_route_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_default_accept_source_route
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80920-2
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1


    - name: Ensure sysctl net.ipv4.tcp_syncookies is set
      sysctl:
        name: net.ipv4.tcp_syncookies
        value: '{{ sysctl_net_ipv4_tcp_syncookies_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_tcp_syncookies
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80923-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5(1)
        - NIST-800-53-SC-5(2)
        - NIST-800-53-SC-5(3)(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1


    - name: Ensure sysctl net.ipv4.conf.all.accept_redirects is set
      sysctl:
        name: net.ipv4.conf.all.accept_redirects
        value: '{{ sysctl_net_ipv4_conf_all_accept_redirects_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_all_accept_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80917-8
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-7(a)
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1


    - name: Ensure sysctl net.ipv4.conf.default.secure_redirects is set
      sysctl:
        name: net.ipv4.conf.default.secure_redirects
        value: '{{ sysctl_net_ipv4_conf_default_secure_redirects_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_default_secure_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81017-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - NIST-800-171-3.1.20


    - name: Ensure sysctl net.ipv4.conf.default.log_martians is set
      sysctl:
        name: net.ipv4.conf.default.log_martians
        value: '{{ sysctl_net_ipv4_conf_default_log_martians_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_default_log_martians
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81020-0
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5(3)(a)
        - NIST-800-171-3.1.20


    - name: Ensure sysctl net.ipv4.conf.all.log_martians is set
      sysctl:
        name: net.ipv4.conf.all.log_martians
        value: '{{ sysctl_net_ipv4_conf_all_log_martians_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_all_log_martians
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81018-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5(3)(a)
        - NIST-800-171-3.1.20


    - name: Ensure sysctl net.ipv4.conf.default.rp_filter is set
      sysctl:
        name: net.ipv4.conf.default.rp_filter
        value: '{{ sysctl_net_ipv4_conf_default_rp_filter_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_default_rp_filter
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81022-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-7(a)
        - NIST-800-171-3.1.20


    - name: Ensure sysctl net.ipv4.conf.all.secure_redirects is set
      sysctl:
        name: net.ipv4.conf.all.secure_redirects
        value: '{{ sysctl_net_ipv4_conf_all_secure_redirects_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_all_secure_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81016-8
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-7(a)
        - NIST-800-171-3.1.20


    - name: Ensure sysctl net.ipv4.icmp_echo_ignore_broadcasts is set
      sysctl:
        name: net.ipv4.icmp_echo_ignore_broadcasts
        value: '{{ sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_icmp_echo_ignore_broadcasts
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80922-8
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1


    - name: Ensure sysctl net.ipv4.conf.default.accept_redirects is set
      sysctl:
        name: net.ipv4.conf.default.accept_redirects
        value: '{{ sysctl_net_ipv4_conf_default_accept_redirects_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_default_accept_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80919-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-7(a)
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1


    - name: Ensure sysctl net.ipv4.icmp_ignore_bogus_error_responses is set
      sysctl:
        name: net.ipv4.icmp_ignore_bogus_error_responses
        value: '{{ sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_icmp_ignore_bogus_error_responses
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81023-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-171-3.1.20

    - name: Ensure sysctl net.ipv4.conf.all.send_redirects is set to 0
      sysctl:
        name: net.ipv4.conf.all.send_redirects
        value: '0'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_all_send_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80918-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5CM-6(a)
        - NIST-800-53-SC-7(a)
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1

    - name: Ensure sysctl net.ipv4.conf.default.send_redirects is set to 0
      sysctl:
        name: net.ipv4.conf.default.send_redirects
        value: '0'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_default_send_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80921-0
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5CM-6(a)
        - NIST-800-53-SC-7(a)
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1

    - name: Ensure sysctl net.ipv4.ip_forward is set to 0
      sysctl:
        name: net.ipv4.ip_forward
        value: '0'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_ip_forward
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81024-2
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5CM-6(a)
        - NIST-800-53-SC-7(a)
        - NIST-800-171-3.1.20

    - name: Ensure iptables is installed
      package:
        name: iptables
        state: present
      tags:
        - package_iptables_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82982-0
        - NIST-800-53-CM-6(a)

    - name: Ensure kernel module 'bluetooth' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/bluetooth.conf
        regexp: bluetooth
        line: install bluetooth /bin/true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - kernel_module_bluetooth_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80832-9
        - NIST-800-53-AC-18(a)
        - NIST-800-53-AC-18(3)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-MP-7
        - NIST-800-171-3.1.16
        - CJIS-5.13.1.3

    - name: Ensure firewalld is installed
      package:
        name: firewalld
        state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - package_firewalld_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82998-6
        - NIST-800-53-CM-6(a)

    - name: Enable service firewalld
      block:
        - name: Gather the package facts
          package_facts:
            manager: auto
        - name: Enable service firewalld
          service:
            name: firewalld
            enabled: 'yes'
            state: started
          when:
            - '"firewalld" in ansible_facts.packages'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_firewalld_enabled
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80877-4
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CA-3(5)
        - NIST-800-53-SC-7(21)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.3
        - NIST-800-171-3.4.7


    - name: Ensure sysctl net.ipv6.conf.default.accept_ra is set
      sysctl:
        name: net.ipv6.conf.default.accept_ra
        value: '{{ sysctl_net_ipv6_conf_default_accept_ra_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv6_conf_default_accept_ra
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81007-7
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.20


    - name: Ensure sysctl net.ipv6.conf.default.accept_source_route is set
      sysctl:
        name: net.ipv6.conf.default.accept_source_route
        value: '{{ sysctl_net_ipv6_conf_default_accept_source_route_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv6_conf_default_accept_source_route
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81015-0
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.20


    - name: Ensure sysctl net.ipv6.conf.all.accept_ra is set
      sysctl:
        name: net.ipv6.conf.all.accept_ra
        value: '{{ sysctl_net_ipv6_conf_all_accept_ra_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv6_conf_all_accept_ra
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81006-9
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.20


    - name: Ensure sysctl net.ipv6.conf.all.accept_source_route is set
      sysctl:
        name: net.ipv6.conf.all.accept_source_route
        value: '{{ sysctl_net_ipv6_conf_all_accept_source_route_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv6_conf_all_accept_source_route
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81013-5
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.20


    - name: Ensure sysctl net.ipv6.conf.default.accept_redirects is set
      sysctl:
        name: net.ipv6.conf.default.accept_redirects
        value: '{{ sysctl_net_ipv6_conf_default_accept_redirects_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv6_conf_default_accept_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81010-1
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.20


    - name: Ensure sysctl net.ipv6.conf.all.accept_redirects is set
      sysctl:
        name: net.ipv6.conf.all.accept_redirects
        value: '{{ sysctl_net_ipv6_conf_all_accept_redirects_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv6_conf_all_accept_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81009-3
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.20

    - name: Ensure kernel module 'atm' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/atm.conf
        regexp: atm
        line: install atm /bin/true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - kernel_module_atm_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-82028-2

    - name: Ensure kernel module 'tipc' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/tipc.conf
        regexp: tipc
        line: install tipc /bin/true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - kernel_module_tipc_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-82297-3
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Ensure kernel module 'firewire-core' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/firewire-core.conf
        regexp: firewire-core
        line: install firewire-core /bin/true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - kernel_module_firewire-core_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-82005-0

    - name: Ensure kernel module 'can' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/can.conf
        regexp: can
        line: install can /bin/true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - kernel_module_can_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-82059-7

    - name: Ensure kernel module 'sctp' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/sctp.conf
        regexp: sctp
        line: install sctp /bin/true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - kernel_module_sctp_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80834-5
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.4.6
        - CJIS-5.10.1

    - name: Ensure sysctl net.core.bpf_jit_harden is set to 2
      sysctl:
        name: net.core.bpf_jit_harden
        value: '2'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_core_bpf_jit_harden
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-82934-1

    - name: Ensure sysctl kernel.core_pattern is set to |/bin/false
      sysctl:
        name: kernel.core_pattern
        value: '|/bin/false'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_kernel_core_pattern
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-82215-5

    - name: Ensure sysctl kernel.unprivileged_bpf_disabled is set to 1
      sysctl:
        name: kernel.unprivileged_bpf_disabled
        value: '1'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_kernel_unprivileged_bpf_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-82974-7

    - name: Ensure sysctl kernel.dmesg_restrict is set to 1
      sysctl:
        name: kernel.dmesg_restrict
        value: '1'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_kernel_dmesg_restrict
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80913-7
        - NIST-800-53-SI-11(a)
        - NIST-800-53-SI-11(b)
        - NIST-800-171-3.1.5

    - name: Ensure sysctl kernel.perf_event_paranoid is set to 2
      sysctl:
        name: kernel.perf_event_paranoid
        value: '2'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_kernel_perf_event_paranoid
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81054-9

    - name: Ensure sysctl kernel.kexec_load_disabled is set to 1
      sysctl:
        name: kernel.kexec_load_disabled
        value: '1'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_kernel_kexec_load_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80952-5

    - name: Ensure sysctl kernel.yama.ptrace_scope is set to 1
      sysctl:
        name: kernel.yama.ptrace_scope
        value: '1'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_kernel_yama_ptrace_scope
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80953-3

    - name: get current kernel parameters
      command: /usr/bin/grub2-editenv - list
      register: kernelopts
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_slub_debug_argument
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required
        - CCE-80945-9
    - name: Update the bootloader menu
      command: /usr/bin/grub2-editenv - set "{{ item }} slub_debug=P"
      with_items: '{{ kernelopts.stdout_lines | select(''match'', ''^kernelopts.*'') |
        list }}'
      when:
        - kernelopts.stdout_lines is defined
        - kernelopts.stdout_lines | length > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_slub_debug_argument
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required
        - CCE-80945-9

    - name: get current kernel parameters
      command: /usr/bin/grub2-editenv - list
      register: kernelopts
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_page_poison_argument
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required
        - CCE-80944-2
    - name: Update the bootloader menu
      command: /usr/bin/grub2-editenv - set "{{ item }} page_poison=1"
      with_items: '{{ kernelopts.stdout_lines | select(''match'', ''^kernelopts.*'') |
        list }}'
      when:
        - kernelopts.stdout_lines is defined
        - kernelopts.stdout_lines | length > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_page_poison_argument
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required
        - CCE-80944-2

    - name: Disable service systemd-coredump
      block:
        - name: Gather the service facts
          service_facts: null
        - name: Disable service systemd-coredump
          systemd:
            name: systemd-coredump.service
            enabled: 'no'
            state: stopped
            masked: 'yes'
          when: '"systemd-coredump.service" in ansible_facts.services'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_systemd-coredump_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82881-4
    - name: Unit Socket Exists - systemd-coredump.socket
      command: systemctl list-unit-files systemd-coredump.socket
      args:
        warn: false
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      check_mode: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_systemd-coredump_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82881-4
    - name: Disable socket systemd-coredump
      systemd:
        name: systemd-coredump.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"systemd-coredump.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_systemd-coredump_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82881-4

    - name: Disable core dump backtraces
      block:
        - name: Deduplicate values from /etc/systemd/coredump.conf
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            regexp: ^\s*ProcessSizeMax\s*=\s*
            state: absent
        - name: Insert correct line to /etc/systemd/coredump.conf
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            line: ProcessSizeMax=0
            state: present
      tags:
        - coredump_disable_backtraces
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82251-0

    - name: disable core dumps with limits
      lineinfile:
        dest: /etc/security/limits.conf
        regexp: ^[^#].*core
        line: '*        hard       core      0'
        create: true
      tags:
        - disable_users_coredumps
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-81038-2

    - name: Disable storing core dump
      block:
        - name: Deduplicate values from /etc/systemd/coredump.conf
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            regexp: ^\s*Storage\s*=\s*
            state: absent
        - name: Insert correct line to /etc/systemd/coredump.conf
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            line: Storage=none
            state: present
      tags:
        - coredump_disable_storage
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82252-8

    - name: Ensure kernel module 'cramfs' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/cramfs.conf
        regexp: cramfs
        line: install cramfs /bin/true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - kernel_module_cramfs_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81031-7
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.4.6

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/dev/shm'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_noexec
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-80838-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_noexec
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-80838-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: Ensure permission noexec are set on /dev/shm
      mount:
        path: /dev/shm
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},noexec'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_noexec
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-80838-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/boot'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_boot_nosuid
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-81033-3
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_boot_nosuid
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-81033-3
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: Ensure permission nosuid are set on /boot
      mount:
        path: /boot
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nosuid'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_boot_nosuid
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-81033-3
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/home'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_home_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-81048-1
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_home_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-81048-1
    - name: Ensure permission nodev are set on /home
      mount:
        path: /home
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nodev'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_home_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-81048-1

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/var/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_tmp_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82154-6
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_tmp_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82154-6
    - name: Ensure permission nosuid are set on /var/tmp
      mount:
        path: /var/tmp
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nosuid'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_tmp_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82154-6

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_tmp_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82623-0
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_tmp_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82623-0
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: Ensure permission nodev are set on /tmp
      mount:
        path: /tmp
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nodev'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_tmp_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82623-0
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/var/log'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_log_nosuid
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82065-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_log_nosuid
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82065-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: Ensure permission nosuid are set on /var/log
      mount:
        path: /var/log
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nosuid'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_log_nosuid
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82065-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/var'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_nodev
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82062-1
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_nodev
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82062-1
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: Ensure permission nodev are set on /var
      mount:
        path: /var
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nodev'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_nodev
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82062-1
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/home'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_home_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-81050-7
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_home_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-81050-7
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: Ensure permission nosuid are set on /home
      mount:
        path: /home
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nosuid'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_home_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-81050-7
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_tmp_noexec
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82139-7
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_tmp_noexec
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82139-7
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: Ensure permission noexec are set on /tmp
      mount:
        path: /tmp
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},noexec'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_tmp_noexec
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82139-7
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/var/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_tmp_noexec
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82151-2
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_tmp_noexec
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82151-2
    - name: Ensure permission noexec are set on /var/tmp
      mount:
        path: /var/tmp
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},noexec'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_tmp_noexec
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82151-2

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/var/log/audit'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_log_audit_noexec
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82975-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_log_audit_noexec
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82975-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: Ensure permission noexec are set on /var/log/audit
      mount:
        path: /var/log/audit
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},noexec'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_log_audit_noexec
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82975-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/var/log/audit'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_log_audit_nodev
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82080-3
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_log_audit_nodev
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82080-3
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: Ensure permission nodev are set on /var/log/audit
      mount:
        path: /var/log/audit
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nodev'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_log_audit_nodev
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82080-3
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_tmp_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82140-5
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_tmp_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82140-5
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: Ensure permission nosuid are set on /tmp
      mount:
        path: /tmp
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nosuid'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_tmp_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82140-5
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/var/log'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_log_nodev
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82077-9
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_log_nodev
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82077-9
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: Ensure permission nodev are set on /var/log
      mount:
        path: /var/log
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nodev'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_log_nodev
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82077-9
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/var/log'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_log_noexec
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82008-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_log_noexec
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82008-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: Ensure permission noexec are set on /var/log
      mount:
        path: /var/log
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},noexec'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_log_noexec
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82008-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/boot'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_boot_nodev
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82941-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_boot_nodev
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82941-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: Ensure permission nodev are set on /boot
      mount:
        path: /boot
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nodev'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_boot_nodev
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82941-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/var/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_tmp_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82068-8
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_tmp_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82068-8
    - name: Ensure permission nodev are set on /var/tmp
      mount:
        path: /var/tmp
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nodev'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_tmp_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82068-8

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/var/log/audit'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_log_audit_nosuid
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82921-8
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_log_audit_nosuid
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82921-8
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7
    - name: Ensure permission nosuid are set on /var/log/audit
      mount:
        path: /var/log/audit
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nosuid'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_log_audit_nosuid
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82921-8
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: Ensure fapolicyd is installed
      package:
        name: fapolicyd
        state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - package_fapolicyd_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82191-8
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SI-4(22)

    - name: Enable service fapolicyd
      block:
        - name: Gather the package facts
          package_facts:
            manager: auto
        - name: Enable service fapolicyd
          service:
            name: fapolicyd
            enabled: 'yes'
            state: started
          when:
            - '"fapolicyd" in ansible_facts.packages'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_fapolicyd_enabled
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82249-4
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SI-4(22)

    - name: Ensure usbguard is installed
      package:
        name: usbguard
        state: present
      tags:
        - package_usbguard_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82959-8

    - name: Enable service usbguard
      block:
        - name: Gather the package facts
          package_facts:
            manager: auto
        - name: Enable service usbguard
          service:
            name: usbguard
            enabled: 'yes'
            state: started
          when:
            - '"usbguard" in ansible_facts.packages'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_usbguard_enabled
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82853-3

    - name: Disable SSH Root Login
      block:
        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitRootLogin\s+
            state: absent
        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: PermitRootLogin no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_disable_root_login
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80901-2
        - NIST-800-53-AC-6(2)
        - NIST-800-53-AC-17(a)
        - NIST-800-53-IA-2
        - NIST-800-53-IA-2(5)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - CJIS-5.5.6

    - name: Enable SSH Warning Banner
      block:
        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*Banner\s+
            state: absent
        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: Banner /etc/issue
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_enable_warning_banner
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80905-3
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(c)
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.9
        - CJIS-5.5.6

    - name: Disable GSSAPI Authentication
      block:
        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*GSSAPIAuthentication\s+
            state: absent
        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: GSSAPIAuthentication no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_disable_gssapi_auth
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80897-2
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-17(a)
        - NIST-800-171-3.1.12

    - name: Force frequent session key renegotiation
      block:
        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*RekeyLimit\s+
            state: absent
        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: RekeyLimit 512M 1h
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_rekey_limit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82177-7

    - name: Setting unquoted shell-style assignment of 'SSH_USE_STRONG_RNG' to '32' in
        '/etc/sysconfig/sshd'
      block:
        - name: Deduplicate values from /etc/sysconfig/sshd
          lineinfile:
            path: /etc/sysconfig/sshd
            create: false
            regexp: ^\s*SSH_USE_STRONG_RNG=
            state: absent
        - name: Insert correct line to /etc/sysconfig/sshd
          lineinfile:
            path: /etc/sysconfig/sshd
            create: true
            line: SSH_USE_STRONG_RNG=32
            state: present
            insertbefore: ^# SSH_USE_STRONG_RNG
            validate: /usr/bin/bash -n %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_use_strong_rng
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82462-3


    - name: Set SSH Client Alive Max Count
      block:
        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*ClientAliveCountMax\s+
            state: absent
        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: ClientAliveCountMax {{ var_sshd_set_keepalive }}
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_set_keepalive
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80907-9
        - NIST-800-53-AC-2(5)
        - NIST-800-53-AC-12
        - NIST-800-53-AC-17(a)
        - NIST-800-53-SC-10
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.11
        - CJIS-5.5.6


    - name: Set SSH Idle Timeout Interval
      block:
        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*ClientAliveInterval\s+
            state: absent
        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: ClientAliveInterval {{ sshd_idle_timeout_value }}
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_set_idle_timeout
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80906-1
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-2(5)
        - NIST-800-53-AC-12
        - NIST-800-53-AC-17(a)
        - NIST-800-53-SC-10
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.11
        - PCI-DSS-Req-8.1.8
        - CJIS-5.5.6

